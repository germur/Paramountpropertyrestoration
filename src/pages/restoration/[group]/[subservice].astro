---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { restorationGroups } from "../../../data/restoration.js";
import Breadcrumbs from "../../../components/Breadcrumbs.jsx";

import WaterTemplate from "../../../components/restoration/templates/WaterTemplate.astro";
import FireTemplate from "../../../components/restoration/templates/FireTemplate.astro";
import StormTemplate from "../../../components/restoration/templates/StormTemplate.astro";
import MoldTemplate from "../../../components/restoration/templates/MoldTemplate.astro";
import MitigationTemplate from "../../../components/restoration/templates/MitigationTemplate.astro";
import UnifiedTemplate from "../../../components/restoration/templates/UnifiedTemplate.astro";

export async function getStaticPaths() {
    const combinations = [];
    
    // Solo servicios de restauraciÃ³n (sin ciudades)
    restorationGroups.forEach(group => {
        group.subservices.forEach(subservice => {
            combinations.push({
                params: {
                    group: group.slug,
                    subservice: subservice.slug
                },
                props: {
                    groupData: {
                        name: group.name,
                        slug: group.slug,
                        template: group.template || "generic",
                        description: group.description
                    },
                    subData: {
                        ...subservice,
                        groupSlug: group.slug,
                        groupName: group.name,
                        template: group.template
                    }
                }
            });
        });
    });
    
    return combinations;
}

const { groupData, subData } = Astro.props;

// Generate canonical URL
const canonicalURL = `/restoration/${groupData.slug}/${subData.slug}`;

const pageTitle =
    subData?.seo?.title ??
    `${subData.title} | ${groupData.name} | Paramount Property Restoration`;
const pageDescription = subData?.seo?.description ?? `Professional ${subData.title} services in Florida by Paramount Property Restoration`;

// Generate breadcrumbs
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Restoration', href: '/restoration' },
  { label: groupData.name, href: `/restoration/${groupData.slug}` },
  { label: subData.title, href: canonicalURL }
];

const templates = {
    water: WaterTemplate,
    fire: FireTemplate,
    storm: StormTemplate,
    mold: MoldTemplate,
    mitigation: MitigationTemplate,
};
const Template = templates[groupData.template] ?? UnifiedTemplate;
---

<BaseLayout title={pageTitle} description={pageDescription}>
    <!-- Schema.org for Service -->
    <script type="application/ld+json" slot="head">
      {
        "@context": "https://schema.org",
        "@type": "Service",
        "name": `${subData.title}`,
        "description": pageDescription,
        "provider": {
          "@type": "LocalBusiness",
          "name": "Paramount Property Restoration",
          "telephone": "+1-786-602-2217"
        },
        "areaServed": {
          "@type": "State",
          "name": "Florida"
        },
        "serviceType": "Emergency Property Restoration",
        "url": `https://paramountpropertyrestoration.com${canonicalURL}`
      }
    </script>
    
    <!-- Canonical URL -->
    <link rel="canonical" href={`https://paramountpropertyrestoration.com${canonicalURL}`} slot="head" />
    
    <div class="container">
        <Breadcrumbs client:load crumbs={breadcrumbs} />
    </div>
    <Template group={groupData} sub={subData} />
</BaseLayout>