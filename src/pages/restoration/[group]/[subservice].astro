---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getAllCombinations } from "../../../data/restoration.js";

import WaterTemplate from "../../../components/restoration/templates/WaterTemplate.astro";
import FireTemplate from "../../../components/restoration/templates/FireTemplate.astro";
import StormTemplate from "../../../components/restoration/templates/StormTemplate.astro";
import MoldTemplate from "../../../components/restoration/templates/MoldTemplate.astro";
import MitigationTemplate from "../../../components/restoration/templates/MitigationTemplate.astro";
import GenericTemplate from "../../../components/restoration/templates/GenericTemplate.astro";

export async function getStaticPaths() {
    const combinations = getAllCombinations();
    
    return combinations.map(({ serviceData, cityData }) => ({
        params: {
            group: serviceData.group || "restoration",
            subservice: serviceData.slug
        },
        props: {
            groupData: {
                name: serviceData.groupName || "Restoration Services",
                template: serviceData.template || "generic"
            },
            subData: serviceData
        }
    }));
}

const { groupData, subData } = Astro.props;

const pageTitle =
    subData?.seo?.title ??
    `${subData.title} | ${groupData.name} | Paramount Property Restoration`;
const pageDescription = subData?.seo?.description ?? `Professional ${subData.title} services in Florida by Paramount Property Restoration`;

const templates = {
    water: WaterTemplate,
    fire: FireTemplate,
    storm: StormTemplate,
    mold: MoldTemplate,
    mitigation: MitigationTemplate,
};
const Template = templates[groupData.template] ?? GenericTemplate;
---

<BaseLayout title={pageTitle} description={pageDescription}>
    <Template group={groupData} sub={subData} />
</BaseLayout>