---
// src/pages/restoration/[service]/[subcategory]/[ciudad].astro
import { getAllRestorationCombinations } from "../../../../data/restoration.js";
import { getEnrichedSubserviceContent } from "../../../../data/subservice-content.js";
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import "../../../../styles/pages/[ciudad].css";
import "../../../../styles/pages/restoration-city.css";
import RestorationCTA from "../../../../components/RestorationCTA.jsx";
import FAQ from "../../../../components/AcordeonServices.jsx";

export async function getStaticPaths() {
  const combinations = getAllRestorationCombinations();

  return combinations.map(
    ({
      service,
      subcategory,
      ciudad,
      servicioData,
      ciudadData,
      groupData,
    }) => ({
      params: {
        service,
        subcategory,
        ciudad,
      },
      props: {
        servicioData,
        ciudadData,
        groupData,
      },
    })
  );
}

const { service, subcategory, ciudad } = Astro.params;
const { servicioData, ciudadData, groupData } = Astro.props;

// Obtener contenido específico del subservicio
const subserviceContent = getEnrichedSubserviceContent(subcategory, ciudadData);

// Generate dynamic content for SEO
const pageTitle = `${servicioData.title} in ${ciudadData.nombre} | Paramount Property Restoration`;
const pageDescription =
  servicioData.seo?.description ||
  `Professional ${servicioData.title.toLowerCase()} services in ${ciudadData.nombre}, ${ciudadData.region}. 24/7 emergency response and certified restoration specialists.`;

// Hero content from subservice-specific data or fallback
const heroContent = {
  title: subserviceContent?.hero?.title || `${servicioData.title} in ${ciudadData.nombre}`,
  subtitle: subserviceContent?.hero?.description || `Fast, reliable ${(servicioData.nombre || servicioData.title).toLowerCase()} services in ${ciudadData.nombre}, ${ciudadData.region}.`,
  ctaText: `Get Free Quote in ${ciudadData.nombre}`,
  bgImage: servicioData.hero?.bg || "/images/restoration-hero-default.jpg",
  iconRow: servicioData.hero?.iconRow || [],
  badge: subserviceContent?.hero?.badge || null
};

// Use subservice-specific FAQs if available
const rawFaqs = subserviceContent?.faqs || servicioData?.faqs || [];
const customQuestions = rawFaqs.map((faq, index) => ({
  id: `custom-${index}`,
  question: faq.q ?? faq.question ?? "",
  answer: faq.a ?? faq.answer ?? "",
}));

const finalCta = {
  title: `Start your ${servicioData.title.toLowerCase()} in ${ciudadData.nombre}`,
  cta: `Request Your Free Estimate`,
  href: servicioData.cta?.href ?? "/contact",
};

// Service features from subservice content
const serviceFeatures = subserviceContent?.features || [
  "24/7 emergency response team",
  "Advanced equipment & techniques", 
  "Insurance claim assistance",
  "Licensed & certified technicians"
];

// Nearby service areas for copy
const serviceAreaCities = [
  "Weston",
  "Pembroke Pines",
  "Coral Gables",
  "Aventura",
  "Doral",
  "Kendall",
];
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <!-- Hero Section -->
  <section
    class="hero-section"
    style={`background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url(${heroContent.bgImage})`}
  >
    <div class="container">
      <div class="hero-content">
        <!-- Main heading -->
        <h1 class="hero-title">
          {heroContent.title}
        </h1>

        <!-- Hero subtitle/description -->
        <p class="hero-subtitle">
          {heroContent.subtitle}
        </p>

        <!-- Emergency badge if applicable -->
        {
          heroContent.badge && (
            <div class="emergency-badge">{heroContent.badge}</div>
          )
        }

        <!-- CTA Button -->
        <div class="hero-cta">
          <a href="/contact" class="btn-primary btn-emergency">
            {heroContent.ctaText}
          </a>
          {
            servicioData.hero?.tagline && (
              <p class="hero-tagline">{servicioData.hero.tagline}</p>
            )
          }
        </div>
      </div>
    </div>
  </section>

  <!-- Service Overview Section -->
  <section class="section service-overview">
    <div class="container">
      <div class="overview-grid">
        <div class="overview-content">
          <h2>{servicioData.title} Services You Can Trust</h2>
          <p class="overview-text">
            We deliver full-service {servicioData.title.toLowerCase()} in {
              ciudadData.nombre
            }
            with expert technicians, clean work practices, and results you can rely
            on.
          </p>

          <ul class="service-features">
            {serviceFeatures.map((feature) => (
              <li>
                <span class="feature-icon">✓</span>
                {feature}
              </li>
            ))}
          </ul>
        </div>

        <div class="overview-sidebar">
          <h3>Serving {ciudadData.nombre} and All of {ciudadData.region}</h3>
          <p>
            We offer {servicioData.title.toLowerCase()} in {ciudadData.nombre} and
            throughout
            {ciudadData.region}, including neighborhoods like {
              serviceAreaCities.slice(0, 3).join(", ")
            }, and {serviceAreaCities[3]}.
          </p>
          <a href="/contact" class="btn-outline">
            Check Availability in Your Neighborhood →
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Service Process Section (if available) -->
  {subserviceContent?.process && (
    <section class="section">
      <div class="container">
        <h2 class="section-title">{subserviceContent.process.title}</h2>
        <div class="steps-container">
          {subserviceContent.process.steps.map((step, index) => (
            <div class="step-item" data-step={index + 1}>
              <div class="step-icon">
                <i class={step.icon}></i>
              </div>
              <h3>{step.title}</h3>
              <p>{step.text}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Services Grid (if available) -->
  {subserviceContent?.services && (
    <section class="section">
      <div class="container">
        <h2 class="section-title">Our {servicioData.title} Services</h2>
        <div class="services-grid">
          {subserviceContent.services.map((service) => (
            <div class="service-item">
              <i class={service.icon}></i>
              <h3>{service.title}</h3>
              <p>{service.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Visual Gallery Section -->
  <section class="section gallery-section">
    <div class="container">
      <h2 class="section-title">Our Work in {ciudadData.nombre}</h2>
      <div class="gallery-grid">
        <div class="gallery-item">
          <img
            src="/images/restoration-before-after-1.jpg"
            alt="Before and after restoration work"
          />
          <div class="gallery-overlay">
            <h3>Complete Restoration</h3>
            <p>Professional results you can see</p>
          </div>
        </div>
        <div class="gallery-item">
          <img
            src="/images/restoration-process-1.jpg"
            alt="Restoration process in action"
          />
          <div class="gallery-overlay">
            <h3>Expert Technicians</h3>
            <p>Skilled professionals at work</p>
          </div>
        </div>
        <div class="gallery-item">
          <img
            src="/images/restoration-equipment-1.jpg"
            alt="Professional restoration equipment"
          />
          <div class="gallery-overlay">
            <h3>Advanced Equipment</h3>
            <p>State-of-the-art tools and technology</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <FAQ
    category={groupData.template || "general"}
    customQuestions={customQuestions}
    title={`About ${servicioData.title} in ${ciudadData.nombre}`}
    client:load
  />

  <RestorationCTA
    title={finalCta.title}
    subtitle={""}
    buttonText={finalCta.cta}
    buttonLink={finalCta.href}
    client:load
  />
</BaseLayout>