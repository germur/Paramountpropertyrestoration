---
export interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
  price?: string;
  popular?: boolean;
  ctaText?: string;
  ctaLink?: string;
  variant?: 'default' | 'mold' | 'water' | 'fire' | 'storm';
  imageUrl?: string;
}

const { 
  title, 
  description, 
  icon, 
  features, 
  price, 
  popular = false, 
  ctaText = "Learn More",
  ctaLink = "/contact",
  variant = 'default',
  imageUrl
} = Astro.props;

// Configuraci√≥n de variantes por tipo de servicio
const variantConfig = {
  default: { color: 'var(--color-accent)', bgColor: 'var(--bg-primary)' },
  mold: { color: 'var(--service-mold)', bgColor: '#f0fdf4' },
  water: { color: 'var(--service-water)', bgColor: '#f0f9ff' },
  fire: { color: 'var(--service-fire)', bgColor: '#fef2f2' },
  storm: { color: 'var(--service-storm)', bgColor: '#faf5ff' }
};

const config = variantConfig[variant] || variantConfig.default;
---

<article class={`service-card service-card--${variant} ${popular ? 'service-card--popular' : ''}`}>
  {popular && (
    <div class="popular-badge">
      <span>Most Popular</span>
    </div>
  )}
  
  {imageUrl && (
    <div class="service-image">
      <img 
        src={imageUrl} 
        alt={`${title} service visualization`}
        loading="lazy"
        decoding="async"
      />
    </div>
  )}
  
  <div class="service-icon" style={`--icon-color: ${config.color}; --icon-bg: ${config.bgColor}`}>
    <Fragment set:html={icon} />
  </div>
  
  <div class="service-content">
    <h3 class="service-title">{title}</h3>
    <p class="service-description">{description}</p>
    
    {price && (
      <div class="service-price">
        <span class="price">{price}</span>
        <span class="price-note">Starting from</span>
      </div>
    )}
    
    <ul class="service-features" role="list">
      {features.map((feature) => (
        <li class="feature-item">
          <svg class="check-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path d="M9 12l2 2 4-4"/>
            <circle cx="12" cy="12" r="10"/>
          </svg>
          <span>{feature}</span>
        </li>
      ))}
    </ul>
  </div>
  
  <div class="service-footer">
    <a href={ctaLink} class="service-cta" aria-label={`${ctaText} for ${title}`}>
      {ctaText}
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
        <path d="M5 12h14M12 5l7 7-7 7"/>
      </svg>
    </a>
  </div>
</article>

<style>
  .service-card {
    background: var(--bg-primary, #ffffff);
    border-radius: var(--radius-lg, 16px);
    box-shadow: var(--shadow-sm, 0 4px 16px rgba(30, 41, 59, 0.08));
    padding: var(--spacing-8, 2rem);
    text-align: center;
    transition: all 0.3s ease;
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    border: 2px solid transparent;
    overflow: hidden;
  }

  .service-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg, 0 16px 32px rgba(30, 41, 59, 0.16));
    border-color: var(--color-accent, #35c3e9);
  }

  .service-card:focus-within {
    outline: 2px solid var(--color-accent, #35c3e9);
    outline-offset: 2px;
  }

  /* Variantes por tipo de servicio */
  .service-card--popular {
    border-color: var(--color-accent, #35c3e9);
    transform: scale(1.02);
    position: relative;
  }

  .service-card--popular:hover {
    transform: scale(1.02) translateY(-4px);
  }

  .service-card--mold:hover {
    border-color: var(--service-mold, #16A34A);
  }

  .service-card--water:hover {
    border-color: var(--service-water, #0EA5E9);
  }

  .service-card--fire:hover {
    border-color: var(--service-fire, #DC2626);
  }

  .service-card--storm:hover {
    border-color: var(--service-storm, #8B5CF6);
  }

  .popular-badge {
    position: absolute;
    top: -1px;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(135deg, var(--color-accent, #35c3e9), var(--color-accent-hover, #2a9fd1));
    color: white;
    padding: var(--spacing-2, 0.5rem) var(--spacing-4, 1rem);
    border-radius: 0 0 var(--radius, 8px) var(--radius, 8px);
    font-size: var(--font-size-sm, 0.875rem);
    font-weight: 600;
    white-space: nowrap;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .service-image {
    width: 100%;
    height: 200px;
    margin: -2rem -2rem 1.5rem -2rem;
    overflow: hidden;
    position: relative;
  }

  .service-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .service-card:hover .service-image img {
    transform: scale(1.05);
  }

  .service-icon {
    width: 80px;
    height: 80px;
    margin: 0 auto var(--spacing-6, 1.5rem);
    background: var(--icon-bg, var(--bg-secondary, #f8fafc));
    border: 3px solid var(--icon-color, var(--color-accent, #35c3e9));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--icon-color, var(--color-accent, #35c3e9));
    font-size: 2rem;
    transition: all 0.3s ease;
  }

  .service-card:hover .service-icon {
    background: var(--icon-color, var(--color-accent, #35c3e9));
    color: white;
    transform: scale(1.1);
  }

  .service-icon :global(svg) {
    width: 40px;
    height: 40px;
  }

  .service-icon :global(i) {
    font-size: 2rem;
  }

  .service-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    margin-bottom: var(--spacing-6, 1.5rem);
  }

  .service-title {
    font-size: var(--font-size-2xl, 1.5rem);
    margin-bottom: var(--spacing-4, 1rem);
    color: var(--text-primary, #1e293b);
    font-weight: 700;
    line-height: 1.3;
  }

  .service-description {
    color: var(--text-secondary, #64748b);
    line-height: 1.6;
    margin-bottom: var(--spacing-6, 1.5rem);
    font-size: var(--font-size-base, 1rem);
  }

  .service-price {
    margin-bottom: var(--spacing-6, 1.5rem);
    text-align: center;
  }

  .price {
    font-size: var(--font-size-3xl, 1.875rem);
    font-weight: 700;
    color: var(--color-accent, #35c3e9);
    display: block;
  }

  .price-note {
    font-size: var(--font-size-sm, 0.875rem);
    color: var(--text-muted, #94a3b8);
    margin-top: 0.25rem;
    display: block;
  }

  .service-features {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: left;
  }

  .feature-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-3, 0.75rem);
    margin-bottom: var(--spacing-3, 0.75rem);
    color: var(--text-secondary, #64748b);
    font-size: var(--font-size-sm, 0.875rem);
    line-height: 1.5;
  }

  .feature-item:last-child {
    margin-bottom: 0;
  }

  .check-icon {
    color: var(--color-accent, #35c3e9);
    flex-shrink: 0;
    margin-top: 2px;
  }

  .service-footer {
    margin-top: auto;
    padding-top: var(--spacing-6, 1.5rem);
  }

  .service-cta {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-2, 0.5rem);
    background: var(--color-accent, #35c3e9);
    color: white;
    padding: var(--spacing-3, 0.75rem) var(--spacing-6, 1.5rem);
    border-radius: var(--radius, 8px);
    text-decoration: none;
    font-weight: 600;
    font-size: var(--font-size-base, 1rem);
    transition: all 0.2s ease;
    width: 100%;
    justify-content: center;
    position: relative;
    overflow: hidden;
  }

  .service-cta::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .service-cta:hover::before {
    left: 100%;
  }

  .service-cta:hover {
    background: var(--color-accent-hover, #2a9fd1);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(53, 195, 233, 0.3);
  }

  .service-cta:focus {
    outline: 2px solid var(--color-accent, #35c3e9);
    outline-offset: 2px;
  }

  .service-cta svg {
    transition: transform 0.2s ease;
  }

  .service-cta:hover svg {
    transform: translateX(4px);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .service-card {
      padding: var(--spacing-6, 1.5rem);
    }

    .service-card--popular {
      transform: none;
    }

    .service-card--popular:hover {
      transform: translateY(-4px);
    }

    .service-icon {
      width: 60px;
      height: 60px;
      margin-bottom: var(--spacing-4, 1rem);
    }

    .service-icon :global(svg) {
      width: 30px;
      height: 30px;
    }

    .service-title {
      font-size: var(--font-size-xl, 1.25rem);
    }

    .service-image {
      height: 150px;
      margin: -1.5rem -1.5rem 1rem -1.5rem;
    }
  }

  @media (max-width: 480px) {
    .service-card {
      padding: var(--spacing-4, 1rem);
    }

    .service-icon {
      width: 50px;
      height: 50px;
    }

    .service-icon :global(svg) {
      width: 24px;
      height: 24px;
    }

    .service-title {
      font-size: var(--font-size-lg, 1.125rem);
    }

    .service-description {
      font-size: var(--font-size-sm, 0.875rem);
    }
  }

  /* Accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .service-card,
    .service-icon,
    .service-cta,
    .service-image img {
      transition: none;
    }

    .service-card:hover,
    .service-card--popular:hover,
    .service-cta:hover {
      transform: none;
    }

    .service-cta::before {
      display: none;
    }
  }

  /* Modo oscuro */
  @media (prefers-color-scheme: dark) {
    .service-card {
      background: var(--bg-dark, #1e293b);
      border-color: var(--color-border, #374151);
    }

    .service-title {
      color: var(--text-white, #ffffff);
    }

    .service-description {
      color: var(--text-muted, #9ca3af);
    }
  }
</style>